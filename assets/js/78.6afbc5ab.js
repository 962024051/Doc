(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{430:function(t,v,_){"use strict";_.r(v);var d=_(42),r=Object(d.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"聚合管道操作符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#聚合管道操作符"}},[t._v("#")]),t._v(" 聚合管道操作符")]),t._v(" "),_("h2",{attrs:{id:"算术表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#算术表达式"}},[t._v("#")]),t._v(" 算术表达式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$abs")]),t._v(" "),_("td",[t._v("返回数字的绝对 value。")])]),t._v(" "),_("tr",[_("td",[t._v("$add")]),t._v(" "),_("td",[t._v("添加 numbers 以 return 总和，或添加 numbers 和 date 以 return 新的 date。如果添加 numbers 和 date，则将 numbers 视为毫秒。接受任意数量的参数表达式，但最多只能有一个表达式解析为 date。")])]),t._v(" "),_("tr",[_("td",[t._v("$ceil")]),t._v(" "),_("td",[t._v("返回大于或等于指定数字的最小 integer。")])]),t._v(" "),_("tr",[_("td",[t._v("$divide")]),t._v(" "),_("td",[t._v("返回将第一个数除以第二个数的结果。接受两个参数表达式。")])]),t._v(" "),_("tr",[_("td",[t._v("$exp")]),t._v(" "),_("td",[t._v("将 e 提高到指定的指数。")])]),t._v(" "),_("tr",[_("td",[t._v("$floor")]),t._v(" "),_("td",[t._v("返回小于或等于指定数字的最大 integer。")])]),t._v(" "),_("tr",[_("td",[t._v("$ln")]),t._v(" "),_("td",[t._v("计算数字的自然 log。")])]),t._v(" "),_("tr",[_("td",[t._v("$log")]),t._v(" "),_("td",[t._v("计算指定基数中的数字的 log。")])]),t._v(" "),_("tr",[_("td",[t._v("$log10")]),t._v(" "),_("td",[t._v("计算数字的 log 基数 10。")])]),t._v(" "),_("tr",[_("td",[t._v("$mod")]),t._v(" "),_("td",[t._v("返回第一个数字的余数除以第二个数字。接受两个参数表达式。")])]),t._v(" "),_("tr",[_("td",[t._v("$multiply")]),t._v(" "),_("td",[t._v("将 numbers 乘以_return 产品。接受任意数量的参数表达式。")])]),t._v(" "),_("tr",[_("td",[t._v("$pow")]),t._v(" "),_("td",[t._v("将数字提高到指定的指数。")])]),t._v(" "),_("tr",[_("td",[t._v("$round")]),t._v(" "),_("td",[t._v("将数字四舍五入为整数或指定的小数位。")])]),t._v(" "),_("tr",[_("td",[t._v("$sqrt")]),t._v(" "),_("td",[t._v("计算平方根。")])]),t._v(" "),_("tr",[_("td",[t._v("$subtract")]),t._v(" "),_("td",[t._v("返回从第一个中减去第二个 value 的结果。如果这两个值是 numbers，返回差异。如果这两个值是日期，则返回差异(以毫秒为单位)。如果这两个值是 date 和一个以毫秒为单位的数字，_return 结果 date。接受两个参数表达式。如果这两个值是 date 和数字，请首先指定 date 参数，因为从数字中减去 date 没有意义。")])]),t._v(" "),_("tr",[_("td",[t._v("$trunc")]),t._v(" "),_("td",[t._v("截断其整数的数字。")])])])]),t._v(" "),_("h2",{attrs:{id:"列表表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#列表表达式"}},[t._v("#")]),t._v(" 列表表达式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$arrayElemAt")]),t._v(" "),_("td",[t._v("返回指定的数组索引处的元素。")])]),t._v(" "),_("tr",[_("td",[t._v("$arrayToObject")]),t._v(" "),_("td",[t._v("将键值对的数组转换为文档。")])]),t._v(" "),_("tr",[_("td",[t._v("$concatArrays")]),t._v(" "),_("td",[t._v("连接数组以返回连接的数组。")])]),t._v(" "),_("tr",[_("td",[t._v("$filter")]),t._v(" "),_("td",[t._v("选择数组的子集以返回仅包含与过滤条件匹配的元素的数组。")])]),t._v(" "),_("tr",[_("td",[t._v("$in")]),t._v(" "),_("td",[t._v("返回一个布尔值，指示指定的值是否在数组中。")])]),t._v(" "),_("tr",[_("td",[t._v("$indexOfArray")]),t._v(" "),_("td",[t._v("在数组中搜索指定值的出现，并返回第一个出现的数组索引。如果未找到子字符串，则返回-1。")])]),t._v(" "),_("tr",[_("td",[t._v("$isArray")]),t._v(" "),_("td",[t._v("确定操作数是否为数组。返回一个布尔值。")])]),t._v(" "),_("tr",[_("td",[t._v("$map")]),t._v(" "),_("td",[t._v("对数组的每个元素应用子表达式，并按顺序返回结果值的数组。接受命名参数。")])]),t._v(" "),_("tr",[_("td",[t._v("$objectToArray")]),t._v(" "),_("td",[t._v("将文档转换为代表键值对的文档数组。")])]),t._v(" "),_("tr",[_("td",[t._v("$range")]),t._v(" "),_("td",[t._v("根据用户定义的输入输出包含整数序列的数组。")])]),t._v(" "),_("tr",[_("td",[t._v("$reduce")]),t._v(" "),_("td",[t._v("将表达式应用于数组中的每个元素，并将它们组合为单个值。")])]),t._v(" "),_("tr",[_("td",[t._v("$reverseArray")]),t._v(" "),_("td",[t._v("返回具有相反顺序元素的数组。")])]),t._v(" "),_("tr",[_("td",[t._v("$size")]),t._v(" "),_("td",[t._v("返回数组中元素的数量。接受单个表达式作为参数。")])]),t._v(" "),_("tr",[_("td",[t._v("$slice")]),t._v(" "),_("td",[t._v("返回数组的子集。")])]),t._v(" "),_("tr",[_("td",[t._v("$zip")]),t._v(" "),_("td",[t._v("合并两个数组。")])])])]),t._v(" "),_("h2",{attrs:{id:"布尔表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#布尔表达式"}},[t._v("#")]),t._v(" 布尔表达式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$and")]),t._v(" "),_("td",[t._v("仅当其所有表达式求值为true时才返回true。接受任意数量的参数表达式。")])]),t._v(" "),_("tr",[_("td",[t._v("$not")]),t._v(" "),_("td",[t._v("返回与其参数表达式相反的 boolean value。接受单个参数表达式。")])]),t._v(" "),_("tr",[_("td",[t._v("$or")]),t._v(" "),_("td",[t._v("当任何表达式求值为true时返回true。接受任意数量的参数表达式。")])])])]),t._v(" "),_("h2",{attrs:{id:"比较表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#比较表达式"}},[t._v("#")]),t._v(" 比较表达式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$cmp")]),t._v(" "),_("td",[t._v("如果两个值相等则返回0，如果第一个 value 大于第二个值则返回1，如果第一个 value 小于第二个值，则返回-1。")])]),t._v(" "),_("tr",[_("td",[t._v("$eq")]),t._v(" "),_("td",[t._v("如果值相等，则返回true。")])]),t._v(" "),_("tr",[_("td",[t._v("$gt")]),t._v(" "),_("td",[t._v("如果第一个 value 大于第二个，则返回true。")])]),t._v(" "),_("tr",[_("td",[t._v("$gte")]),t._v(" "),_("td",[t._v("如果第一个 value 大于或等于第二个，则返回true。")])]),t._v(" "),_("tr",[_("td",[t._v("$lt")]),t._v(" "),_("td",[t._v("如果第一个 value 小于第二个，则返回true。")])]),t._v(" "),_("tr",[_("td",[t._v("$lte")]),t._v(" "),_("td",[t._v("如果第一个 value 小于或等于第二个值，则返回true。")])]),t._v(" "),_("tr",[_("td",[t._v("$ne")]),t._v(" "),_("td",[t._v("如果值不相等，则返回true。")])])])]),t._v(" "),_("h2",{attrs:{id:"条件表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#条件表达式"}},[t._v("#")]),t._v(" 条件表达式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$cond")]),t._v(" "),_("td",[t._v("一个三元运算符，它计算一个表达式，并根据结果返回另外两个表达式之一的值。接受有序列表中的三个表达式或三个命名参数。")])]),t._v(" "),_("tr",[_("td",[t._v("$ifNull")]),t._v(" "),_("td",[t._v("如果第一个表达式导致结果为null ，则返回第一个表达式的非空结果或第二个表达式的结果。空结果包含未定义值或缺少字段的实例。接受两个表达式作为参数。第二个表达式的结果可以为 null。")])]),t._v(" "),_("tr",[_("td",[t._v("$switch")]),t._v(" "),_("td",[t._v("计算一系列案例表达式。当它找到一个计算结果为true的表达式时，$switch执行一个指定的表达式并退出控制流。")])])])]),t._v(" "),_("h2",{attrs:{id:"自定义聚合表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#自定义聚合表达式"}},[t._v("#")]),t._v(" 自定义聚合表达式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),_("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("$accumulator")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("定义一个自定义累加器函数。版本4.4中的新功能。")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("$function")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("定义一个自定义函数。版本4.4中的新功能。")])])])]),t._v(" "),_("h2",{attrs:{id:"数据大小运营商"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据大小运营商"}},[t._v("#")]),t._v(" 数据大小运营商")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),_("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("$binarySize")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("返回给定字符串或二进制数据值内容的大小（以字节为单位）。")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("$bsonSize")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("返回Object编码为BSON时给定文档（即bsontype ）的字节大小")])])])]),t._v(" "),_("h2",{attrs:{id:"日期表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#日期表达式"}},[t._v("#")]),t._v(" 日期表达式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$dateFromParts")]),t._v(" "),_("td",[t._v("给出日期的组成部分，构造一个 BSON Date对象。")])]),t._v(" "),_("tr",[_("td",[t._v("$dateFromString")]),t._v(" "),_("td",[t._v("将 date/time 字符串转换为 date 对象。")])]),t._v(" "),_("tr",[_("td",[t._v("$dateToParts")]),t._v(" "),_("td",[t._v("返回包含 date 组成部分的文档。")])]),t._v(" "),_("tr",[_("td",[t._v("$dateToString")]),t._v(" "),_("td",[t._v("将 date 作为格式化的 string 返回。")])]),t._v(" "),_("tr",[_("td",[t._v("$dayOfMonth")]),t._v(" "),_("td",[t._v("将 date 的月中某天返回为 1 到 31 之间的数字。")])]),t._v(" "),_("tr",[_("td",[t._v("$dayOfWeek")]),t._v(" "),_("td",[t._v("将 date 的星期几返回为 1(星期日)和 7(星期六)之间的数字。")])]),t._v(" "),_("tr",[_("td",[t._v("$dayOfYear")]),t._v(" "),_("td",[t._v("将 date 的年中日期作为 1 到 366(闰年)之间的数字返回。")])]),t._v(" "),_("tr",[_("td",[t._v("$hour")]),t._v(" "),_("td",[t._v("将 date 的小时数作为 0 到 23 之间的数字返回。")])]),t._v(" "),_("tr",[_("td",[t._v("$isoDayOfWeek")]),t._v(" "),_("td",[t._v("返回 ISO 8601 格式的工作日编号，范围从1(星期一)到7(星期日)。")])]),t._v(" "),_("tr",[_("td",[t._v("$isoWeek")]),t._v(" "),_("td",[t._v("返回 ISO 8601 格式的周数，范围从1到53。 星期数从1开始，周(星期一到星期日)包含年份的第一个星期四。")])]),t._v(" "),_("tr",[_("td",[t._v("$isoWeekYear")]),t._v(" "),_("td",[t._v("以 ISO 8601 格式返回年份编号。年份从第 1 周的星期一(ISO 8601)开始，结束于上周的星期日(ISO 8601)。")])]),t._v(" "),_("tr",[_("td",[t._v("$millisecond")]),t._v(" "),_("td",[t._v("返回 date 的毫秒数，作为 0 到 999 之间的数字。")])]),t._v(" "),_("tr",[_("td",[t._v("$minute")]),t._v(" "),_("td",[t._v("将 date 的分钟作为 0 到 59 之间的数字返回。")])]),t._v(" "),_("tr",[_("td",[t._v("$month")]),t._v(" "),_("td",[t._v("将 date 的月份返回为 1(1 月)和 12(12 月)之间的数字。")])]),t._v(" "),_("tr",[_("td",[t._v("$second")]),t._v(" "),_("td",[t._v("返回 date 的秒数，作为 0 到 60 之间的数字(闰秒)。")])]),t._v(" "),_("tr",[_("td",[t._v("$toDate")]),t._v(" "),_("td",[t._v("将值转换为日期。 版本4.0中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$week")]),t._v(" "),_("td",[t._v("返回 date 的周数，作为 0(在一年的第一个星期日之前的部分周)和 53(闰年)之间的数字。")])]),t._v(" "),_("tr",[_("td",[t._v("$year")]),t._v(" "),_("td",[t._v("将 date 的年份作为数字返回(例：2014)。")])])])]),t._v(" "),_("p",[t._v("以下算术运算符可以使用 date 操作数：")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$add")]),t._v(" "),_("td",[t._v("添加 numbers 和 date 以返回新的 date。如果添加 numbers 和 date，则将 numbers 视为毫秒。接受任意数量的参数表达式，但最多只能有一个表达式解析为 date。")])]),t._v(" "),_("tr",[_("td",[t._v("$subtract")]),t._v(" "),_("td",[t._v("返回从第一个中减去第二个值的结果。如果这两个值是日期，则返回差异(以毫秒为单位)。如果这两个值是 date 和一个以毫秒为单位的数字，返回结果 date。接受两个参数表达式。如果这两个值是 date 和数字，请首先指定 date 参数，因为从数字中减去 date 没有意义。")])])])]),t._v(" "),_("h2",{attrs:{id:"文字表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#文字表达式"}},[t._v("#")]),t._v(" 文字表达式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$literal")]),t._v(" "),_("td",[t._v("无需解析即可返回 value。用于聚合管道可以将其解释为表达式的值。例如，对以$开头的字符串使用[]$literal]()表达式，以避免解析为字段路径。")])])])]),t._v(" "),_("h2",{attrs:{id:"杂项"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#杂项"}},[t._v("#")]),t._v(" 杂项")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),_("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("$rand")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("返回介于0和1之间的随机浮点数版本4.4.2中的新功能。")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("$sampleRate")]),t._v(" "),_("td",{staticStyle:{"text-align":"left"}},[t._v("以给定的速率随机选择文档。尽管每次运行所选择的文件的确切数量会有所不同，但是选择的数量近似于以文件总数的百分比表示的采样率。版本4.4.2中的新功能。")])])])]),t._v(" "),_("h2",{attrs:{id:"对象表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对象表达式"}},[t._v("#")]),t._v(" 对象表达式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$mergeObjects")]),t._v(" "),_("td",[t._v("将多个文档合并为一个文档。  version 3.6 中的新内容。")])]),t._v(" "),_("tr",[_("td",[t._v("$objectToArray")]),t._v(" "),_("td",[t._v("将文档转换为表示 key-value 对的文档的 array。  version 3.6 中的新内容。")])])])]),t._v(" "),_("h2",{attrs:{id:"集合表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#集合表达式"}},[t._v("#")]),t._v(" 集合表达式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$allElementsTrue")]),t._v(" "),_("td",[t._v("如果没有集合的元素计算为false，则返回true，否则返回false。接受单个参数表达式。")])]),t._v(" "),_("tr",[_("td",[t._v("$anyElementTrue")]),t._v(" "),_("td",[t._v("如果集合中的任何元素求值为true，则返回true;否则，返回false。接受单个参数表达式。")])]),t._v(" "),_("tr",[_("td",[t._v("$setDifference")]),t._v(" "),_("td",[t._v("返回一个集合，其中的元素出现在第一个集合中但不出现在第二个集合中; 即：相对于第一组执行第二组的相对补充。接受两个参数表达式。")])]),t._v(" "),_("tr",[_("td",[t._v("$setEquals")]),t._v(" "),_("td",[t._v("如果输入 sets 具有相同的不同元素，则返回true。接受两个或多个参数表达式。")])]),t._v(" "),_("tr",[_("td",[t._v("$setIntersection")]),t._v(" "),_("td",[t._v("返回一个包含所有输入 sets 中出现的元素的集合。接受任意数量的参数表达式。")])]),t._v(" "),_("tr",[_("td",[t._v("$setIsSubset")]),t._v(" "),_("td",[t._v("如果第一组的所有元素出现在第二组中，则返回true，包括第一组的等于第二组的时间; 即：不是严格的子集。接受两个参数表达式。")])]),t._v(" "),_("tr",[_("td",[t._v("$setUnion")]),t._v(" "),_("td",[t._v("返回一个包含任何输入 sets 中出现的元素的集合。")])])])]),t._v(" "),_("h2",{attrs:{id:"字符串表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符串表达式"}},[t._v("#")]),t._v(" 字符串表达式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$concat")]),t._v(" "),_("td",[t._v("连接任意数量的 strings。")])]),t._v(" "),_("tr",[_("td",[t._v("$dateFromString")]),t._v(" "),_("td",[t._v("将 date/time string 转换为 date object。")])]),t._v(" "),_("tr",[_("td",[t._v("$dateToString")]),t._v(" "),_("td",[t._v("将 date 作为格式化的 string 返回。")])]),t._v(" "),_("tr",[_("td",[t._v("$indexOfBytes")]),t._v(" "),_("td",[t._v("搜索 string 以查找子字符串的出现并返回第一次出现的 UTF-8 字节索引。如果未找到子字符串，则返回-1。")])]),t._v(" "),_("tr",[_("td",[t._v("$indexOfCP")]),t._v(" "),_("td",[t._v("搜索 string 以查找子字符串的出现并返回第一次出现的 UTF-8 code 点索引。如果找不到子字符串，则返回-1")])]),t._v(" "),_("tr",[_("td",[t._v("$ltrim")]),t._v(" "),_("td",[t._v("从字符串开头删除空格或指定的字符。 版本4.0中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$regexFind")]),t._v(" "),_("td",[t._v("将正则表达式（regex）应用于字符串，并返回第一个匹配的子字符串的信息。 4.2版中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$regexFindAll")]),t._v(" "),_("td",[t._v("将正则表达式（regex）应用于字符串，并返回所有匹配的子字符串的信息。 4.2版中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$regexMatch")]),t._v(" "),_("td",[t._v("将正则表达式（regex）应用于字符串，并返回一个布尔值，该布尔值指示是否找到匹配项。 4.2版中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$replaceOne")]),t._v(" "),_("td",[t._v("替换给定输入中匹配字符串的第一个实例。版本4.4中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$replaceAll")]),t._v(" "),_("td",[t._v("替换给定输入中匹配字符串的所有实例。版本4.4中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$rtrim")]),t._v(" "),_("td",[t._v("从字符串末尾删除空格或指定的字符。 版本4.0中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$split")]),t._v(" "),_("td",[t._v("根据分隔符将 string 拆分为子字符串。返回子字符串的 array。如果在 string 中找不到分隔符，则返回包含原始 string 的 array。")])]),t._v(" "),_("tr",[_("td",[t._v("$strLenBytes")]),t._v(" "),_("td",[t._v("返回 string 中 UTF-8 编码字节的数量。")])]),t._v(" "),_("tr",[_("td",[t._v("$strLenCP")]),t._v(" "),_("td",[t._v("返回 string 中 UTF-8 code 点的数量。")])]),t._v(" "),_("tr",[_("td",[t._v("$strcasecmp")]),t._v(" "),_("td",[t._v("执行 case-insensitive string 比较并返回：如果两个 strings 相等则返回0，如果第一个 string 大于第二个，则返回1，如果第一个 string 小于第二个，则返回-1。")])]),t._v(" "),_("tr",[_("td",[t._v("$substr")]),t._v(" "),_("td",[t._v("已过时。使用$substrBytes或$substrCP。")])]),t._v(" "),_("tr",[_("td",[t._v("$substrBytes")]),t._v(" "),_("td",[t._v("返回 string 的子字符串。从 string 中指定的 UTF-8 字节索引(zero-based)处的字符开始，并继续指定的字节数。")])]),t._v(" "),_("tr",[_("td",[t._v("$substrCP")]),t._v(" "),_("td",[t._v("返回 string 的子字符串。从 string 中指定的 UTF-8 code point(CP)索引(zero-based)处的字符开始，并继续指定的 code 点数。")])]),t._v(" "),_("tr",[_("td",[t._v("$toLower")]),t._v(" "),_("td",[t._v("将 string 转换为小写。接受单个参数表达式。")])]),t._v(" "),_("tr",[_("td",[t._v("$toString")]),t._v(" "),_("td",[t._v("将值转换为字符串。 版本4.0中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$trim")]),t._v(" "),_("td",[t._v("从字符串的开头和结尾删除空格或指定的字符。 版本4.0中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$toUpper")]),t._v(" "),_("td",[t._v("将 string 转换为大写。接受单个参数表达式。")])])])]),t._v(" "),_("h2",{attrs:{id:"文本表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#文本表达式"}},[t._v("#")]),t._v(" 文本表达式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$meta")]),t._v(" "),_("td",[t._v("访问文本搜索元数据。")])])])]),t._v(" "),_("h2",{attrs:{id:"三角表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三角表达式"}},[t._v("#")]),t._v(" 三角表达式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$sin")]),t._v(" "),_("td",[t._v("返回以弧度为单位的值的正弦值。")])]),t._v(" "),_("tr",[_("td",[t._v("$cos")]),t._v(" "),_("td",[t._v("返回以弧度为单位的值的余弦值。")])]),t._v(" "),_("tr",[_("td",[t._v("$tan")]),t._v(" "),_("td",[t._v("返回以弧度为单位的值的切线。")])]),t._v(" "),_("tr",[_("td",[t._v("$asin")]),t._v(" "),_("td",[t._v("返回弧度值的反正弦（弧正弦）。")])]),t._v(" "),_("tr",[_("td",[t._v("$acos")]),t._v(" "),_("td",[t._v("返回弧度值的反余弦（弧余弦）。")])]),t._v(" "),_("tr",[_("td",[t._v("$atan")]),t._v(" "),_("td",[t._v("返回弧度值的反正切（弧切）。")])]),t._v(" "),_("tr",[_("td",[t._v("$atan2")]),t._v(" "),_("td",[t._v("返回弧度表示的y / x的反正切（弧切线），其中y和x是分别传递给表达式的第一个和第二个值。")])]),t._v(" "),_("tr",[_("td",[t._v("$asinh")]),t._v(" "),_("td",[t._v("返回弧度值的反双曲正弦（双曲反正弦）。")])]),t._v(" "),_("tr",[_("td",[t._v("$acosh")]),t._v(" "),_("td",[t._v("返回弧度值的反双曲余弦（双曲反余弦）。")])]),t._v(" "),_("tr",[_("td",[t._v("$atanh")]),t._v(" "),_("td",[t._v("返回弧度值的反双曲正切（双曲反正切）。")])]),t._v(" "),_("tr",[_("td",[t._v("$degreesToRadians")]),t._v(" "),_("td",[t._v("将值从度转换为弧度。")])]),t._v(" "),_("tr",[_("td",[t._v("$radiansToDegrees")]),t._v(" "),_("td",[t._v("将值从弧度转换为度。")])])])]),t._v(" "),_("h2",{attrs:{id:"类型表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#类型表达式"}},[t._v("#")]),t._v(" 类型表达式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$convert")]),t._v(" "),_("td",[t._v("将值转换为指定的类型。 版本4.0中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$isNumber")]),t._v(" "),_("td",[t._v("返回Booleantrue如果指定的表达解析为integer，decimal，double，或long。返回Booleanfalse如果表达式解析为任何其他BSON类型， null或缺失字段。")])]),t._v(" "),_("tr",[_("td",[t._v("$toBool")]),t._v(" "),_("td",[t._v("将值转换为布尔值。 版本4.0中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$toDate")]),t._v(" "),_("td",[t._v("将值转换为日期。 版本4.0中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$toDecimal")]),t._v(" "),_("td",[t._v("将值转换为Decimal128。 版本4.0中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$toDouble")]),t._v(" "),_("td",[t._v("将值转换为双精度。 版本4.0中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$toInt")]),t._v(" "),_("td",[t._v("将值转换为整数。 版本4.0中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$toLong")]),t._v(" "),_("td",[t._v("将值转换为long。 版本4.0中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$toObjectId")]),t._v(" "),_("td",[t._v("将值转换为ObjectId。 版本4.0中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$toString")]),t._v(" "),_("td",[t._v("将值转换为字符串。 版本4.0中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$type")]),t._v(" "),_("td",[t._v("返回该字段的BSON数据类型。")])])])]),t._v(" "),_("h2",{attrs:{id:"累加器-group"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#累加器-group"}},[t._v("#")]),t._v(" 累加器($group)")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$addToSet")]),t._v(" "),_("td",[t._v("返回每个 group 的唯一表达式值的 array。 数组元素的顺序是未定义的。")])]),t._v(" "),_("tr",[_("td",[t._v("$avg")]),t._v(" "),_("td",[t._v("返回数值的平均值。忽略非数字值。")])]),t._v(" "),_("tr",[_("td",[t._v("$first")]),t._v(" "),_("td",[t._v("从每个 group 的第一个文档返回一个值。仅当文档按定义的顺序定义顺序。")])]),t._v(" "),_("tr",[_("td",[t._v("$last")]),t._v(" "),_("td",[t._v("从每个 group 的最后一个文档返回一个值。仅当文档按定义的顺序定义顺序。")])]),t._v(" "),_("tr",[_("td",[t._v("$max")]),t._v(" "),_("td",[t._v("返回每个 group 的最高表达式值。")])]),t._v(" "),_("tr",[_("td",[t._v("$mergeObjects")]),t._v(" "),_("td",[t._v("返回通过组合每个 group 的输入文档创建的文档。")])]),t._v(" "),_("tr",[_("td",[t._v("$min")]),t._v(" "),_("td",[t._v("返回每个 group 的最低表达式值。")])]),t._v(" "),_("tr",[_("td",[t._v("$push")]),t._v(" "),_("td",[t._v("返回每个 group 的表达式值的 array。")])]),t._v(" "),_("tr",[_("td",[t._v("$stdDevPop")]),t._v(" "),_("td",[t._v("返回输入值的总体标准偏差。")])]),t._v(" "),_("tr",[_("td",[t._v("$stdDevSamp")]),t._v(" "),_("td",[t._v("返回输入值的 sample 标准偏差。")])]),t._v(" "),_("tr",[_("td",[t._v("$sum")]),t._v(" "),_("td",[t._v("返回数值的总和。忽略非数字值。")])])])]),t._v(" "),_("h2",{attrs:{id:"累加器-处于其他阶段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#累加器-处于其他阶段"}},[t._v("#")]),t._v(" 累加器(处于其他阶段)")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$avg")]),t._v(" "),_("td",[t._v("返回每个文档的指定表达式或表达式列表的平均值。忽略非数字值。")])]),t._v(" "),_("tr",[_("td",[t._v("$max")]),t._v(" "),_("td",[t._v("返回每个文档的指定表达式或表达式列表的最大值。")])]),t._v(" "),_("tr",[_("td",[t._v("$min")]),t._v(" "),_("td",[t._v("返回每个文档的指定表达式或表达式列表的最小值。")])]),t._v(" "),_("tr",[_("td",[t._v("$stdDevPop")]),t._v(" "),_("td",[t._v("返回输入值的总体标准偏差。")])]),t._v(" "),_("tr",[_("td",[t._v("$stdDevSamp")]),t._v(" "),_("td",[t._v("返回输入值的样本标准偏差。")])]),t._v(" "),_("tr",[_("td",[t._v("$sum")]),t._v(" "),_("td",[t._v("返回数值的总和。忽略非数字值。")])])])]),t._v(" "),_("h2",{attrs:{id:"变量表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#变量表达式"}},[t._v("#")]),t._v(" 变量表达式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$let")]),t._v(" "),_("td",[t._v("定义在子表达式范围内使用的变量，并返回子表达式的结果。接受命名参数。  接受任意数量的参数表达式。")])])])])])}),[],!1,null,null,null);v.default=r.exports}}]);