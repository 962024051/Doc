(window.webpackJsonp=window.webpackJsonp||[]).push([[147],{499:function(n,t,a){"use strict";a.r(t);var e=a(42),s=Object(e.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"枚举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#枚举"}},[n._v("#")]),n._v(" 枚举")]),n._v(" "),a("p",[n._v("使用枚举我们可以定义一些带名字的常量。 使用枚举可以清晰地表达意图或创建一组有区别的用例。 TypeScript支持数字的和基于字符串的枚举。")]),n._v(" "),a("h2",{attrs:{id:"枚举初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#枚举初始化"}},[n._v("#")]),n._v(" 枚举初始化")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("enum 枚举名 {\n    属性名,\n    属性名,\n    属性名,\n    属性名\n}\n声明 变量 = 枚举名.属性名;\n\nenum Direction {\n    Up,\n    Down,\n    Left,\n    Right,\n}\nlet a = Direction.Up;\n")])])]),a("h2",{attrs:{id:"数字枚举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字枚举"}},[n._v("#")]),n._v(" 数字枚举")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("enum 枚举名 {\n    属性名 = 值,\n    属性名,\n    属性名,\n    属性名\n}\n\nenum Direction {\n    Up = 1,\n    Down,\n    Left,\n    Right\n}\n")])])]),a("h2",{attrs:{id:"字符串枚举"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串枚举"}},[n._v("#")]),n._v(" 字符串枚举")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('enum 枚举名 {\n    属性名 = 字符串,\n    属性名 = 字符串,\n    属性名 = 字符串,\n    属性名 = 字符串\n}\n\nenum Direction {\n    Up = "UP",\n    Down = "DOWN",\n    Left = "LEFT",\n    Right = "RIGHT",\n}\n')])])])])}),[],!1,null,null,null);t.default=s.exports}}]);