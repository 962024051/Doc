(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{498:function(t,a,v){"use strict";v.r(a);var _=v(42),n=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"装饰器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#装饰器"}},[t._v("#")]),t._v(" 装饰器")]),t._v(" "),v("p",[t._v("随着TypeScript和ES6里引入了类，在一些场景下我们需要额外的特性来支持标注或修改类及其成员")]),t._v(" "),v("ol",[v("li",[t._v("由上至下依次对装饰器表达式求值。")]),t._v(" "),v("li",[t._v("求值的结果会被当作函数，由下至上依次调用")])]),t._v(" "),v("p",[t._v("语法")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("function  函数名(){\n\n}\n\n@函数名\n")])])]),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("function  函数名(参数：数据类型){\n\n- 第一个参数\n  - 静态方法：类的构造函数\n  - 实例方法：类的原型对象\n- 第二个参数\n  - 方法/属性/类/访问器等名称\n- 第三个参数\n  - 方法/属性/类/访问器等参数对象\n  \n \treturn function (target, propertyKey: string, descriptor: PropertyDescriptor) {\n        执行语句\n    }\n}\n\n@函数名(参数值)\n")])])]),v("h2",{attrs:{id:"装饰器组合"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#装饰器组合"}},[t._v("#")]),t._v(" 装饰器组合")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("//同一行上\n@函数名1  @函数名2   函数\n\n//多行上\n@函数名1  \n@函数名2   \n函数\n")])])]),v("h2",{attrs:{id:"装饰器语法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#装饰器语法"}},[t._v("#")]),t._v(" 装饰器语法")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("//类装饰器\n@函数名\nclass  类名{\n\t//属性装饰器\n\t@函数名\n    属性名: 数据类型;\n    \n\t//方法装饰器\n\t@函数名\n\t方法名(){\n\t\t返回值\n\t}\n\t\t\n\t//访问器装饰器\n\t @函数名\n    get 方法() { return 值; }\n    \n    //参数装饰器\n    方法名(@函数名 参数名: 数据类型) {\n       执行语句\n    }\n}\n")])])]),v("h3",{attrs:{id:"类装饰器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#类装饰器"}},[t._v("#")]),t._v(" 类装饰器")]),t._v(" "),v("p",[t._v("参数")]),t._v(" "),v("ul",[v("li",[t._v("第一个参数（也只有一个参数）\n"),v("ul",[v("li",[t._v("类的构造函数作为其唯一的参数")])])])]),t._v(" "),v("h3",{attrs:{id:"方法装饰器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法装饰器"}},[t._v("#")]),t._v(" 方法装饰器")]),t._v(" "),v("p",[t._v("参数")]),t._v(" "),v("ul",[v("li",[t._v("第一个参数\n"),v("ul",[v("li",[t._v("静态方法：类的构造函数")]),t._v(" "),v("li",[t._v("实例方法：类的原型对象")])])]),t._v(" "),v("li",[t._v("第二个参数\n"),v("ul",[v("li",[t._v("方法名称")])])]),t._v(" "),v("li",[t._v("第三个参数\n"),v("ul",[v("li",[t._v("方法描述符对象")])])])]),t._v(" "),v("h3",{attrs:{id:"属性装饰器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#属性装饰器"}},[t._v("#")]),t._v(" 属性装饰器")]),t._v(" "),v("p",[t._v("参数")]),t._v(" "),v("ul",[v("li",[t._v("第一个参数\n"),v("ul",[v("li",[t._v("静态方法：类的构造函数")]),t._v(" "),v("li",[t._v("实例方法：类的原型对象")])])]),t._v(" "),v("li",[t._v("第二个参数\n"),v("ul",[v("li",[t._v("属性名称")])])])]),t._v(" "),v("h3",{attrs:{id:"访问器装饰器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#访问器装饰器"}},[t._v("#")]),t._v(" 访问器装饰器")]),t._v(" "),v("p",[t._v("参数")]),t._v(" "),v("ul",[v("li",[t._v("第一个参数\n"),v("ul",[v("li",[t._v("静态方法：类的构造函数")]),t._v(" "),v("li",[t._v("实例方法：类的原型对象")])])]),t._v(" "),v("li",[t._v("第二个参数\n"),v("ul",[v("li",[t._v("属性名称")])])]),t._v(" "),v("li",[t._v("第三个参数\n"),v("ul",[v("li",[t._v("方法描述符对象")])])])]),t._v(" "),v("h3",{attrs:{id:"参数装饰器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参数装饰器"}},[t._v("#")]),t._v(" 参数装饰器")]),t._v(" "),v("p",[t._v("参数")]),t._v(" "),v("ul",[v("li",[t._v("第一个参数\n"),v("ul",[v("li",[t._v("静态方法：类的构造函数")]),t._v(" "),v("li",[t._v("实例方法：类的原型对象")])])]),t._v(" "),v("li",[t._v("第二个参数\n"),v("ul",[v("li",[t._v("方法名称")])])]),t._v(" "),v("li",[t._v("第三个参数\n"),v("ul",[v("li",[t._v("参数在函数参数列表中的索引")])])])]),t._v(" "),v("h2",{attrs:{id:"装饰器执行顺序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#装饰器执行顺序"}},[t._v("#")]),t._v(" 装饰器执行顺序")]),t._v(" "),v("p",[t._v("实例装饰器")]),t._v(" "),v("p",[t._v("​\t\t属性 => 访问符 => 参数 => 方法")]),t._v(" "),v("p",[t._v("静态装饰器")]),t._v(" "),v("p",[t._v("​\t\t属性 => 访问符 => 参数 => 方法")]),t._v(" "),v("p",[t._v("类")]),t._v(" "),v("p",[t._v("​\t\t类")])])}),[],!1,null,null,null);a.default=n.exports}}]);