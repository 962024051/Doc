(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{436:function(t,v,_){"use strict";_.r(v);var d=_(42),e=Object(d.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),_("h2",{attrs:{id:"集合"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#集合"}},[t._v("#")]),t._v(" 集合")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("db.collection.aggregate()")]),t._v(" "),_("td",[t._v("提供对聚合管道的访问。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.bulkWrite()")]),t._v(" "),_("td",[t._v("提供批量写入操作功能。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.copyTo()")]),t._v(" "),_("td",[t._v("已过时。包装EVAL以在单个 MongoDB 实例中的集合之间复制数据。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.count()")]),t._v(" "),_("td",[t._v("包装计数以_return 计算集合或视图中的文档数。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.createIndex()")]),t._v(" "),_("td",[t._v("在集合上构建索引。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.createIndexes()")]),t._v(" "),_("td",[t._v("在集合上构建一个或多个索引。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.dataSize()")]),t._v(" "),_("td",[t._v("返回集合的大小。包装collStats输出中的尺寸字段。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.deleteOne()")]),t._v(" "),_("td",[t._v("删除集合中的单个文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.deleteMany()")]),t._v(" "),_("td",[t._v("删除集合中的多个文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.distinct()")]),t._v(" "),_("td",[t._v("返回具有指定字段的不同值的文档的 array。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.drop()")]),t._v(" "),_("td",[t._v("从数据库中删除指定的集合。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.dropIndex()")]),t._v(" "),_("td",[t._v("删除集合上的指定索引。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.dropIndexes()")]),t._v(" "),_("td",[t._v("删除集合上的所有索引。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.ensureIndex()")]),t._v(" "),_("td",[t._v("已过时。使用db.collection.createIndex()。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.explain()")]),t._v(" "),_("td",[t._v("返回有关各种方法的查询执行的信息。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.find()")]),t._v(" "),_("td",[t._v("对集合或视图执行查询并返回游标 object。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.findAndModify()")]),t._v(" "),_("td",[t._v("以原子方式修改并返回单个文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.findOne()")]),t._v(" "),_("td",[t._v("执行查询并返回单个文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.findOneAndDelete()")]),t._v(" "),_("td",[t._v("查找单个文档并将其删除。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.findOneAndReplace()")]),t._v(" "),_("td",[t._v("查找单个文档并替换它。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.findOneAndUpdate()")]),t._v(" "),_("td",[t._v("查找单个文档并进行更新。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.getIndexes()")]),t._v(" "),_("td",[t._v("返回描述集合上现有索引的文档的 array。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.getShardDistribution()")]),t._v(" "),_("td",[t._v("对于分片群集中的集合，db.collection.getShardDistribution()报告块分布的数据。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.getShardVersion()")]),t._v(" "),_("td",[t._v("分片 cluster 的内部诊断方法。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.group()")]),t._v(" "),_("td",[t._v("已过时。提供简单的数据聚合 function。通过 key 对集合中的文档进行分组，并处理结果。使用aggregate()进行更复杂的数据聚合。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.insert()")]),t._v(" "),_("td",[t._v("在集合中创建新文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.insertOne()")]),t._v(" "),_("td",[t._v("在集合中插入新文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.insertMany()")]),t._v(" "),_("td",[t._v("在集合中插入几个新文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.isCapped()")]),t._v(" "),_("td",[t._v("报告集合是否为上限集合。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.latencyStats()")]),t._v(" "),_("td",[t._v("返回集合的延迟统计信息。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.mapReduce()")]),t._v(" "),_("td",[t._v("执行 map-reduce 样式数据聚合。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.reIndex()")]),t._v(" "),_("td",[t._v("重建集合上的所有现有索引。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.remove()")]),t._v(" "),_("td",[t._v("从集合中删除文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.renameCollection()")]),t._v(" "),_("td",[t._v("更改集合的 name。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.replaceOne()")]),t._v(" "),_("td",[t._v("替换集合中的单个文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.save()")]),t._v(" "),_("td",[t._v("在insert()和update()周围提供 wrapper 以插入新文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.stats()")]),t._v(" "),_("td",[t._v("报告集合的 state。在collStats周围提供 wrapper。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.storageSize()")]),t._v(" "),_("td",[t._v("报告集合使用的总大小(以字节为单位)。在collStats输出的storageSize字段周围提供 wrapper。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.totalIndexSize()")]),t._v(" "),_("td",[t._v("报告集合上索引使用的总大小。在collStats输出的totalIndexSize字段周围提供 wrapper。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.totalSize()")]),t._v(" "),_("td",[t._v("报告集合的总大小，包括所有文档的大小和集合上的所有索引。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.update()")]),t._v(" "),_("td",[t._v("修改集合中的文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.updateOne()")]),t._v(" "),_("td",[t._v("修改集合中的单个文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.updateMany()")]),t._v(" "),_("td",[t._v("修改集合中的多个文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.watch()")]),t._v(" "),_("td",[t._v("在集合上建立变更流。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.validate()")]),t._v(" "),_("td",[t._v("对集合执行诊断操作。")])])])]),t._v(" "),_("h2",{attrs:{id:"游标"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#游标"}},[t._v("#")]),t._v(" 游标")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("cursor.addOption()")]),t._v(" "),_("td",[t._v("添加特殊的线程协议标志，用于修改查询的行为。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.batchSize()")]),t._v(" "),_("td",[t._v("控制 MongoDB 将在单个网络消息中 return 到 client 的文档数。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.close()")]),t._v(" "),_("td",[t._v("关闭游标并释放相关的服务器资源。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.isClosed()")]),t._v(" "),_("td",[t._v("如果光标关闭，则返回"),_("code",[t._v("true")]),t._v("。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.collation()")]),t._v(" "),_("td",[t._v("指定db.collection.find()返回的游标的排序规则。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.comment()")]),t._v(" "),_("td",[t._v("将 comment 附加到查询以允许日志和 system.profile 集合中的可跟踪性。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.count()")]),t._v(" "),_("td",[t._v("修改光标以_return 结果集中的文档数而不是文档本身。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.explain()")]),t._v(" "),_("td",[t._v("报告游标的查询执行计划。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.forEach()")]),t._v(" "),_("td",[t._v("对游标中的每个文档应用 JavaScript function。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.hasNext()")]),t._v(" "),_("td",[t._v("如果游标有文档并且可以迭代，则返回 true。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.hint()")]),t._v(" "),_("td",[t._v("强制 MongoDB 为查询使用特定索引。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.isExhausted()")]),t._v(" "),_("td",[t._v("如果光标关闭且批处理中没有剩余 object，则返回"),_("code",[t._v("true")]),t._v("。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.itcount()")]),t._v(" "),_("td",[t._v("通过获取和迭代结果集来计算游标 client-side 中的文档总数。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.limit()")]),t._v(" "),_("td",[t._v("约束游标结果集的大小。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.map()")]),t._v(" "),_("td",[t._v("对函数中的每个文档应用 function，并在 array 中收集 return 值。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.max()")]),t._v(" "),_("td",[t._v("指定游标的独占上限索引。用于cursor.hint()。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.maxScan()")]),t._v(" "),_("td",[t._v("指定要扫描的最大项目数;收集扫描的文档，索引扫描的键。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.maxTimeMS()")]),t._v(" "),_("td",[t._v("指定用于处理游标操作的累积 time 限制(以毫秒为单位)。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.min()")]),t._v(" "),_("td",[t._v("指定游标的包含性较低索引范围。用于cursor.hint()")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.next()")]),t._v(" "),_("td",[t._v("返回游标中的下一个文档。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.noCursorTimeout()")]),t._v(" "),_("td",[t._v("指示服务器在一段时间不活动后自动关闭光标。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.objsLeftInBatch()")]),t._v(" "),_("td",[t._v("返回当前游标批处理中剩余的文档数。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.pretty()")]),t._v(" "),_("td",[t._v("配置光标以 easy-to-read 格式显示结果。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.readConcern()")]),t._v(" "),_("td",[t._v("为find()操作指定阅读关注。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.readPref()")]),t._v(" "),_("td",[t._v("指定阅读偏好到游标以控制 client 如何将查询定向到副本集。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.returnKey()")]),t._v(" "),_("td",[t._v("将光标修改为 return 索引键而不是文档。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.showRecordId()")]),t._v(" "),_("td",[t._v("向光标返回的每个文档添加内部存储引擎 ID 字段。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.size()")]),t._v(" "),_("td",[t._v("应用skip()和limit()方法后，返回游标中文档的计数。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.skip()")]),t._v(" "),_("td",[t._v("返回仅在传递或跳过多个文档后才开始返回结果的游标。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.sort()")]),t._v(" "),_("td",[t._v("返回根据排序规范排序的结果。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.tailable()")]),t._v(" "),_("td",[t._v("将光标标记为 tailable。仅适用于超过上限集合的游标。")])]),t._v(" "),_("tr",[_("td",[t._v("cursor.toArray()")]),t._v(" "),_("td",[t._v("返回包含游标返回的所有文档的 array。")])])])]),t._v(" "),_("h2",{attrs:{id:"数据库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[t._v("#")]),t._v(" 数据库")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("db.adminCommand()")]),t._v(" "),_("td",[t._v("对"),_("code",[t._v("admin")]),t._v("数据库运行命令。")])]),t._v(" "),_("tr",[_("td",[t._v("db.aggregate()")]),t._v(" "),_("td",[t._v("运行不需要底层集合的 admin/diagnostic 管道。")])]),t._v(" "),_("tr",[_("td",[t._v("db.cloneCollection()")]),t._v(" "),_("td",[t._v("在 MongoDB 实例之间直接复制数据。包裹cloneCollection。")])]),t._v(" "),_("tr",[_("td",[t._v("db.cloneDatabase()")]),t._v(" "),_("td",[t._v("将数据库从 remote host 复制到当前 host。包裹克隆。")])]),t._v(" "),_("tr",[_("td",[t._v("db.commandHelp()")]),t._v(" "),_("td",[t._v("返回数据库命令的帮助信息。")])]),t._v(" "),_("tr",[_("td",[t._v("db.copyDatabase()")]),t._v(" "),_("td",[t._v("将数据库复制到当前 host 上的另一个数据库。包裹COPYDB。")])]),t._v(" "),_("tr",[_("td",[t._v("db.createCollection()")]),t._v(" "),_("td",[t._v("创建新集合或视图。常用于创建上限集合。")])]),t._v(" "),_("tr",[_("td",[t._v("db.createView()")]),t._v(" "),_("td",[t._v("创建一个视图。")])]),t._v(" "),_("tr",[_("td",[t._v("db.currentOp()")]),t._v(" "),_("td",[t._v("报告当前的 in-progress 操作。")])]),t._v(" "),_("tr",[_("td",[t._v("db.dropDatabase()")]),t._v(" "),_("td",[t._v("删除当前数据库。")])]),t._v(" "),_("tr",[_("td",[t._v("db.eval()")]),t._v(" "),_("td",[t._v("已过时。将 JavaScript function 传递给mongod实例 server-side JavaScript evaluation。")])]),t._v(" "),_("tr",[_("td",[t._v("db.fsyncLock()")]),t._v(" "),_("td",[t._v("刷新写入磁盘并锁定数据库以防止写入操作并协助备份操作。包裹FSYNC。")])]),t._v(" "),_("tr",[_("td",[t._v("db.fsyncUnlock()")]),t._v(" "),_("td",[t._v("允许在使用db.fsyncLock()锁定的数据库上写入 continue。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getCollection()")]),t._v(" "),_("td",[t._v("返回集合或视图 object。用于访问名称在mongo shell 中无效的集合。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getCollectionInfos()")]),t._v(" "),_("td",[t._v("返回当前数据库中所有集合和视图的集合信息。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getCollectionNames()")]),t._v(" "),_("td",[t._v("列出当前数据库中的所有集合和视图。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getLastError()")]),t._v(" "),_("td",[t._v("检查并返回上一次操作的状态。包裹GetLastError 函数。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getLastErrorObj()")]),t._v(" "),_("td",[t._v("返回上一个操作的状态文档。包裹GetLastError 函数。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getLogComponents()")]),t._v(" "),_("td",[t._v("返回 log 消息详细级别。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getMongo()")]),t._v(" "),_("td",[t._v("返回当前连接的Mongo()连接 object。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getName()")]),t._v(" "),_("td",[t._v("返回当前数据库的 name。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getPrevError()")]),t._v(" "),_("td",[t._v("返回包含自上次错误重置以来的所有错误的状态文档。包裹getPrevError。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getProfilingLevel()")]),t._v(" "),_("td",[t._v("返回数据库操作的当前分析 level。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getProfilingStatus()")]),t._v(" "),_("td",[t._v("返回反映当前性能分析 level 和性能分析阈值的文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getReplicationInfo()")]),t._v(" "),_("td",[t._v("返回包含复制统计信息的文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getSiblingDB()")]),t._v(" "),_("td",[t._v("提供对指定数据库的访问。")])]),t._v(" "),_("tr",[_("td",[t._v("db.help()")]),t._v(" "),_("td",[t._v("显示 common "),_("code",[t._v("db")]),t._v(" object 方法的说明。")])]),t._v(" "),_("tr",[_("td",[t._v("db.hostInfo()")]),t._v(" "),_("td",[t._v("返回一个文档，其中包含有关运行 MongoDB 的系统的信息。包裹Hostinfo 中。")])]),t._v(" "),_("tr",[_("td",[t._v("db.isMaster()")]),t._v(" "),_("td",[t._v("返回报告副本集的 state 的文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.killOp()")]),t._v(" "),_("td",[t._v("终止指定的操作。")])]),t._v(" "),_("tr",[_("td",[t._v("db.listCommands()")]),t._v(" "),_("td",[t._v("显示 common 数据库命令的列表。")])]),t._v(" "),_("tr",[_("td",[t._v("db.logout()")]),t._v(" "),_("td",[t._v("结束经过身份验证的 session。")])]),t._v(" "),_("tr",[_("td",[t._v("db.printCollectionStats()")]),t._v(" "),_("td",[t._v("打印每个集合的统计信息。包裹db.collection.stats()。")])]),t._v(" "),_("tr",[_("td",[t._v("db.printReplicationInfo()")]),t._v(" "),_("td",[t._v("从主数据库的角度打印副本集状态的报告。")])]),t._v(" "),_("tr",[_("td",[t._v("db.printShardingStatus()")]),t._v(" "),_("td",[t._v("打印分片配置和块范围的报告。")])]),t._v(" "),_("tr",[_("td",[t._v("db.printSlaveReplicationInfo()")]),t._v(" "),_("td",[t._v("从辅助节点的角度打印副本集状态的报告。")])]),t._v(" "),_("tr",[_("td",[t._v("db.repairDatabase()")]),t._v(" "),_("td",[t._v("在当前数据库上运行修复例程。")])]),t._v(" "),_("tr",[_("td",[t._v("db.resetError()")]),t._v(" "),_("td",[t._v("重置db.getPrevError()和getPrevError返回的错误消息。")])]),t._v(" "),_("tr",[_("td",[t._v("db.runCommand()")]),t._v(" "),_("td",[t._v("运行数据库命令。")])]),t._v(" "),_("tr",[_("td",[t._v("db.serverBuildInfo()")]),t._v(" "),_("td",[t._v("返回显示mongod实例的编译参数的文档。包装"),_("code",[t._v("buildinfo")]),t._v("。")])]),t._v(" "),_("tr",[_("td",[t._v("db.serverCmdLineOpts()")]),t._v(" "),_("td",[t._v("返回一个文档，其中包含有关用于启动 MongoDB 实例的运行时的信息。包裹getCmdLineOpts。")])]),t._v(" "),_("tr",[_("td",[t._v("db.serverStatus()")]),t._v(" "),_("td",[t._v("返回一个文档，该文档提供数据库 process 的 state 的概述。")])]),t._v(" "),_("tr",[_("td",[t._v("db.setLogLevel()")]),t._v(" "),_("td",[t._v("设置单个 log 消息详细程度 level。")])]),t._v(" "),_("tr",[_("td",[t._v("db.setProfilingLevel()")]),t._v(" "),_("td",[t._v("修改数据库概要分析的当前 level。")])]),t._v(" "),_("tr",[_("td",[t._v("db.shutdownServer()")]),t._v(" "),_("td",[t._v("干净安全地关闭当前的mongod或mongos process。")])]),t._v(" "),_("tr",[_("td",[t._v("db.stats()")]),t._v(" "),_("td",[t._v("返回报告当前数据库的 state 的文档。")])]),t._v(" "),_("tr",[_("td",[t._v("db.version()")]),t._v(" "),_("td",[t._v("返回mongod实例的 version。")])])])]),t._v(" "),_("h2",{attrs:{id:"查询计划缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#查询计划缓存"}},[t._v("#")]),t._v(" 查询计划缓存")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("db.collection.getPlanCache()")]),t._v(" "),_("td",[t._v("返回一个接口，用于访问集合的查询计划缓存 object 和关联的 PlanCache 方法。")])]),t._v(" "),_("tr",[_("td",[t._v("PlanCache.clear()")]),t._v(" "),_("td",[t._v("清除集合的所有缓存查询计划。可通过特定集合的计划缓存 object 访问，即："),_("code",[t._v("db.collection.getPlanCache().clear()")]),t._v("。")])]),t._v(" "),_("tr",[_("td",[t._v("PlanCache.clearPlansByQuery()")]),t._v(" "),_("td",[t._v("清除指定查询形状的缓存查询计划。可通过特定集合的计划缓存 object 访问，即："),_("code",[t._v("db.collection.getPlanCache().clearPlansByQuery()")])])]),t._v(" "),_("tr",[_("td",[t._v("PlanCache.getPlansByQuery()")]),t._v(" "),_("td",[t._v("显示指定查询形状的缓存查询计划。可通过特定集合的计划缓存 object 访问，即："),_("code",[t._v("db.collection.getPlanCache().getPlansByQuery()")]),t._v("。")])]),t._v(" "),_("tr",[_("td",[t._v("PlanCache.help()")]),t._v(" "),_("td",[t._v("显示集合的查询计划缓存可用的方法。可通过特定集合的计划缓存 object 访问，即："),_("code",[t._v("db.collection.getPlanCache().help()")]),t._v("。")])]),t._v(" "),_("tr",[_("td",[t._v("PlanCache.listQueryShapes()")]),t._v(" "),_("td",[t._v("显示存在缓存查询计划的查询形状。可通过特定集合的计划缓存 object 访问，即："),_("code",[t._v("db.collection.getPlanCache().listQueryShapes()")]),t._v("。")])]),t._v(" "),_("tr",[_("td",[t._v("PlanCache.list()")]),t._v(" "),_("td",[t._v("返回集合的计划缓存信息。可通过特定集合（即）的计划缓存对象访问 "),_("code",[t._v("db.collection.getPlanCache().list()")]),t._v("。")])])])]),t._v(" "),_("h2",{attrs:{id:"批量写入操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#批量写入操作"}},[t._v("#")]),t._v(" 批量写入操作")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("db.collection.initializeOrderedBulkOp()")]),t._v(" "),_("td",[t._v("为有序的操作列表初始化Bulk()操作构建器。")])]),t._v(" "),_("tr",[_("td",[t._v("db.collection.initializeUnorderedBulkOp()")]),t._v(" "),_("td",[t._v("为无序的操作列表初始化Bulk()操作构建器。")])]),t._v(" "),_("tr",[_("td",[t._v("Bulk()")]),t._v(" "),_("td",[t._v("批量运营建设者。")])]),t._v(" "),_("tr",[_("td",[t._v("Bulk.execute()")]),t._v(" "),_("td",[t._v("批量执行操作列表。")])]),t._v(" "),_("tr",[_("td",[t._v("Bulk.find()")]),t._v(" "),_("td",[t._v("指定更新或删除操作的查询条件。")])]),t._v(" "),_("tr",[_("td",[t._v("Bulk.find.arrayFilters()")]),t._v(" "),_("td",[t._v("指定用于确定要为"),_("code",[t._v("update")]),t._v("或"),_("code",[t._v("updateOne")]),t._v("操作更新 array 的哪些元素的过滤器。")])]),t._v(" "),_("tr",[_("td",[t._v("Bulk.find.collation()")]),t._v(" "),_("td",[t._v("指定查询条件的整理。")])]),t._v(" "),_("tr",[_("td",[t._v("Bulk.find.remove()")]),t._v(" "),_("td",[t._v("将多个文档删除操作添加到操作列表中。")])]),t._v(" "),_("tr",[_("td",[t._v("Bulk.find.removeOne()")]),t._v(" "),_("td",[t._v("将单个文档删除操作添加到操作列表。")])]),t._v(" "),_("tr",[_("td",[t._v("Bulk.find.replaceOne()")]),t._v(" "),_("td",[t._v("将单个文档替换操作添加到操作列表中。")])]),t._v(" "),_("tr",[_("td",[t._v("Bulk.find.updateOne()")]),t._v(" "),_("td",[t._v("将单个文档更新操作添加到操作列表。")])]),t._v(" "),_("tr",[_("td",[t._v("Bulk.find.update()")]),t._v(" "),_("td",[t._v("将"),_("code",[t._v("multi")]),t._v("更新操作添加到操作列表中。")])]),t._v(" "),_("tr",[_("td",[t._v("Bulk.find.upsert()")]),t._v(" "),_("td",[t._v("为更新操作指定"),_("code",[t._v("upsert: true")]),t._v("。")])]),t._v(" "),_("tr",[_("td",[t._v("Bulk.getOperations()")]),t._v(" "),_("td",[t._v("返回Bulk() operations object 中执行的写操作的 array。")])]),t._v(" "),_("tr",[_("td",[t._v("Bulk.insert()")]),t._v(" "),_("td",[t._v("将 Insert 操作添加到操作列表中。")])]),t._v(" "),_("tr",[_("td",[t._v("Bulk.tojson()")]),t._v(" "),_("td",[t._v("返回一个 JSON 文档，其中包含Bulk() operations object 中的操作数和批处理数。")])]),t._v(" "),_("tr",[_("td",[t._v("Bulk.toString()")]),t._v(" "),_("td",[t._v("将Bulk.tojson()结果作为 string 返回。")])])])]),t._v(" "),_("h2",{attrs:{id:"用户管理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#用户管理"}},[t._v("#")]),t._v(" 用户管理")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("db.auth()")]),t._v(" "),_("td",[t._v("将用户验证到数据库。")])]),t._v(" "),_("tr",[_("td",[t._v("db.changeUserPassword()")]),t._v(" "),_("td",[t._v("更改现有用户的密码。")])]),t._v(" "),_("tr",[_("td",[t._v("db.createUser()")]),t._v(" "),_("td",[t._v("创建一个新用户。")])]),t._v(" "),_("tr",[_("td",[t._v("db.dropUser()")]),t._v(" "),_("td",[t._v("删除单个用户。")])]),t._v(" "),_("tr",[_("td",[t._v("db.dropAllUsers()")]),t._v(" "),_("td",[t._v("删除与数据库关联的所有用户。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getUser()")]),t._v(" "),_("td",[t._v("返回有关指定用户的信息。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getUsers()")]),t._v(" "),_("td",[t._v("返回有关与数据库关联的所有用户的信息。")])]),t._v(" "),_("tr",[_("td",[t._v("db.grantRolesToUser()")]),t._v(" "),_("td",[t._v("向用户授予角色及其权限。")])]),t._v(" "),_("tr",[_("td",[t._v("db.removeUser()")]),t._v(" "),_("td",[t._v("已过时。从数据库中删除用户。")])]),t._v(" "),_("tr",[_("td",[t._v("db.revokeRolesFromUser()")]),t._v(" "),_("td",[t._v("从用户中删除角色。")])]),t._v(" "),_("tr",[_("td",[t._v("db.updateUser()")]),t._v(" "),_("td",[t._v("更新用户数据。")])])])]),t._v(" "),_("h2",{attrs:{id:"角色管理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#角色管理"}},[t._v("#")]),t._v(" 角色管理")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("db.createRole()")]),t._v(" "),_("td",[t._v("创建角色并指定其权限。")])]),t._v(" "),_("tr",[_("td",[t._v("db.dropRole()")]),t._v(" "),_("td",[t._v("删除 user-defined 角色。")])]),t._v(" "),_("tr",[_("td",[t._v("db.dropAllRoles()")]),t._v(" "),_("td",[t._v("删除与数据库关联的所有 user-defined 角色。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getRole()")]),t._v(" "),_("td",[t._v("返回指定角色的信息。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getRoles()")]),t._v(" "),_("td",[t._v("返回数据库中所有 user-defined 角色的信息。")])]),t._v(" "),_("tr",[_("td",[t._v("db.grantPrivilegesToRole()")]),t._v(" "),_("td",[t._v("为 user-defined 角色分配权限。")])]),t._v(" "),_("tr",[_("td",[t._v("db.revokePrivilegesFromRole()")]),t._v(" "),_("td",[t._v("从 user-defined 角色中删除指定的权限。")])]),t._v(" "),_("tr",[_("td",[t._v("db.grantRolesToRole()")]),t._v(" "),_("td",[t._v("指定 user-defined 角色从中继承权限的角色。")])]),t._v(" "),_("tr",[_("td",[t._v("db.revokeRolesFromRole()")]),t._v(" "),_("td",[t._v("从角色中删除继承的角色。")])]),t._v(" "),_("tr",[_("td",[t._v("db.updateRole()")]),t._v(" "),_("td",[t._v("更新 user-defined 角色。")])])])]),t._v(" "),_("h2",{attrs:{id:"复制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#复制"}},[t._v("#")]),t._v(" 复制")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("rs.add()")]),t._v(" "),_("td",[t._v("将成员添加到副本集。")])]),t._v(" "),_("tr",[_("td",[t._v("rs.addArb()")]),t._v(" "),_("td",[t._v("将仲裁者添加到副本集。")])]),t._v(" "),_("tr",[_("td",[t._v("rs.conf()")]),t._v(" "),_("td",[t._v("返回副本集 configuration 文档。")])]),t._v(" "),_("tr",[_("td",[t._v("rs.freeze()")]),t._v(" "),_("td",[t._v("阻止当前成员在 time 期间寻求选举。")])]),t._v(" "),_("tr",[_("td",[t._v("rs.help()")]),t._v(" "),_("td",[t._v("返回副本集函数的基本帮助文本。")])]),t._v(" "),_("tr",[_("td",[t._v("rs.initiate()")]),t._v(" "),_("td",[t._v("初始化新的副本集。")])]),t._v(" "),_("tr",[_("td",[t._v("rs.printReplicationInfo()")]),t._v(" "),_("td",[t._v("从主数据库的角度打印副本集状态的报告。")])]),t._v(" "),_("tr",[_("td",[t._v("rs.printSlaveReplicationInfo()")]),t._v(" "),_("td",[t._v("从辅助节点的角度打印副本集状态的报告。")])]),t._v(" "),_("tr",[_("td",[t._v("rs.reconfig()")]),t._v(" "),_("td",[t._v("Re-configures 通过应用新副本集 configuration object 设置副本。")])]),t._v(" "),_("tr",[_("td",[t._v("rs.remove()")]),t._v(" "),_("td",[t._v("从副本集中删除成员。")])]),t._v(" "),_("tr",[_("td",[t._v("rs.slaveOk()")]),t._v(" "),_("td",[t._v("为当前连接设置"),_("code",[t._v("slaveOk")]),t._v(" property。已过时。使用readPref()和Mongo.setReadPref()设置阅读偏好。")])]),t._v(" "),_("tr",[_("td",[t._v("rs.status()")]),t._v(" "),_("td",[t._v("返回包含有关副本集的 state 的信息的文档。")])]),t._v(" "),_("tr",[_("td",[t._v("rs.stepDown()")]),t._v(" "),_("td",[t._v("导致当前主成为强制选举的辅助。")])]),t._v(" "),_("tr",[_("td",[t._v("rs.syncFrom()")]),t._v(" "),_("td",[t._v("设置此副本集成员将同步的成员，覆盖默认同步目标选择逻辑。")])])])]),t._v(" "),_("h2",{attrs:{id:"分片"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#分片"}},[t._v("#")]),t._v(" 分片")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("sh.addShard()")]),t._v(" "),_("td",[t._v("将碎片添加到分片 cluster。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.addShardTag()")]),t._v(" "),_("td",[t._v("在 MongoDB 3.4 中，此方法别名为sh.addShardToZone()。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.addShardToZone()")]),t._v(" "),_("td",[t._v("将碎片与 zone 关联。支持在分片群集中配置zones。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.addTagRange()")]),t._v(" "),_("td",[t._v("在 MongoDB 3.4 中，此方法别名为sh.updateZoneKeyRange()。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.balancerCollectionStatus()")]),t._v(" "),_("td",[t._v("返回有关分片集合的块是否平衡的信息。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.disableBalancing()")]),t._v(" "),_("td",[t._v("禁用分片数据库中单个集合的平衡。不影响分片 cluster 中其他集合的平衡。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.enableBalancing()")]),t._v(" "),_("td",[t._v("如果以前使用sh.disableBalancing()禁用，则激活分片收集平衡器 process。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.disableAutoSplit()")]),t._v(" "),_("td",[t._v("禁用分片 cluster 的 auto-splitting。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.enableAutoSplit()")]),t._v(" "),_("td",[t._v("为分片 cluster 启用 auto-splitting。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.enableSharding()")]),t._v(" "),_("td",[t._v("在特定数据库上启用分片。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.getBalancerHost()")]),t._v(" "),_("td",[t._v("从 MongoDB 3.4 开始不推荐使用")])]),t._v(" "),_("tr",[_("td",[t._v("sh.getBalancerState()")]),t._v(" "),_("td",[t._v("返回 boolean 以报告当前是否启用了平衡器。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.removeTagRange()")]),t._v(" "),_("td",[t._v("在 MongoDB 3.4 中，此方法别名为sh.removeRangeFromZone()。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.removeRangeFromZone()")]),t._v(" "),_("td",[t._v("删除一系列分片键和 zone 之间的关联。支持在分片群集中配置zones。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.help()")]),t._v(" "),_("td",[t._v("返回"),_("code",[t._v("sh")]),t._v("方法的帮助文本。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.isBalancerRunning()")]),t._v(" "),_("td",[t._v("返回 boolean 以报告 balancer process 当前是否正在迁移块。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.moveChunk()")]),t._v(" "),_("td",[t._v("在分片 cluster中迁移块。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.removeShardTag()")]),t._v(" "),_("td",[t._v("在 MongoDB 3.4 中，此方法别名为sh.removeShardFromZone()。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.removeShardFromZone()")]),t._v(" "),_("td",[t._v("删除分片和 zone 之间的关联。用于管理zone 分片。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.setBalancerState()")]),t._v(" "),_("td",[t._v("启用或禁用在碎片之间迁移块的平衡器。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.shardCollection()")]),t._v(" "),_("td",[t._v("为集合启用分片。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.splitAt()")]),t._v(" "),_("td",[t._v("使用碎片 key的特定值作为分割点将现有的块分成两个块。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.splitFind()")]),t._v(" "),_("td",[t._v("将包含与查询匹配的文档的现有块划分为两个近似相等的块。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.startBalancer()")]),t._v(" "),_("td",[t._v("启用平衡器并等待平衡启动。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.status()")]),t._v(" "),_("td",[t._v("报告分片 cluster的状态，如db.printShardingStatus()。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.stopBalancer()")]),t._v(" "),_("td",[t._v("禁用平衡器并等待任何正在进行的平衡轮完成。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.waitForBalancer()")]),t._v(" "),_("td",[t._v("内部。等待平衡器 state 改变。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.waitForBalancerOff()")]),t._v(" "),_("td",[t._v("内部。等到平衡器停止运行。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.waitForPingChange()")]),t._v(" "),_("td",[t._v("内部。等待从分片 cluster 中的mongos之一更改 ping state。")])]),t._v(" "),_("tr",[_("td",[t._v("sh.updateZoneKeyRange()")]),t._v(" "),_("td",[t._v("将一系列分片键与 zone 关联。支持在分片群集中配置zones。")])])])]),t._v(" "),_("h2",{attrs:{id:"free监控"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#free监控"}},[t._v("#")]),t._v(" Free监控")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("db.enableFreeMonitoring()")]),t._v(" "),_("td",[t._v("在运行时启用Free监控。")])]),t._v(" "),_("tr",[_("td",[t._v("db.disableFreeMonitoring()")]),t._v(" "),_("td",[t._v("在运行时禁用Free监控。")])]),t._v(" "),_("tr",[_("td",[t._v("db.getFreeMonitoringStatus()")]),t._v(" "),_("td",[t._v("返回空闲监视状态。")])])])]),t._v(" "),_("h2",{attrs:{id:"构造函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[t._v("#")]),t._v(" 构造函数")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("BulkWriteResult()")]),t._v(" "),_("td",[t._v("Wrapper 来自Bulk.execute()的结果集。")])]),t._v(" "),_("tr",[_("td",[t._v("Date()")]),t._v(" "),_("td",[t._v("创建 date object。默认情况下，创建包含当前 date 的 date object。")])]),t._v(" "),_("tr",[_("td",[t._v("ObjectId()")]),t._v(" "),_("td",[t._v("返回ObjectId。")])]),t._v(" "),_("tr",[_("td",[t._v("ObjectId.getTimestamp()")]),t._v(" "),_("td",[t._v("返回ObjectId的时间戳部分。")])]),t._v(" "),_("tr",[_("td",[t._v("ObjectId.toString()")]),t._v(" "),_("td",[t._v("显示ObjectId的 string 表示。")])]),t._v(" "),_("tr",[_("td",[t._v("ObjectId.valueOf()")]),t._v(" "),_("td",[t._v("将 ObjectId 的"),_("code",[t._v("str")]),t._v("属性显示为十六进制 string。")])]),t._v(" "),_("tr",[_("td",[t._v("UUID()")]),t._v(" "),_("td",[t._v("将 32-byte 十六进制 string 转换为 UUID BSON 子类型。")])]),t._v(" "),_("tr",[_("td",[t._v("WriteResult()")]),t._v(" "),_("td",[t._v("Wrapper 来自 write 方法的结果集。")])]),t._v(" "),_("tr",[_("td",[t._v("WriteResult.hasWriteError()")]),t._v(" "),_("td",[t._v("返回一个 boolean，指定结果是否包含WriteResult.writeError。")])]),t._v(" "),_("tr",[_("td",[t._v("WriteResult.hasWriteConcernError()")]),t._v(" "),_("td",[t._v("返回一个 boolean，指定结果是否包含WriteResult.writeConcernError。")])])])]),t._v(" "),_("h2",{attrs:{id:"连接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#连接"}},[t._v("#")]),t._v(" 连接")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("connect()")]),t._v(" "),_("td",[t._v("连接到 MongoDB 实例和该实例上的指定数据库。")])]),t._v(" "),_("tr",[_("td",[t._v("Mongo()")]),t._v(" "),_("td",[t._v("创建一个新连接 object。")])]),t._v(" "),_("tr",[_("td",[t._v("Mongo.getDB()")]),t._v(" "),_("td",[t._v("返回数据库 object。")])]),t._v(" "),_("tr",[_("td",[t._v("Mongo.getReadPrefMode()")]),t._v(" "),_("td",[t._v("返回 MongoDB 连接的当前读取首选项模式。")])]),t._v(" "),_("tr",[_("td",[t._v("Mongo.getReadPrefTagSet()")]),t._v(" "),_("td",[t._v("返回 MongoDB 连接的读取首选项标记集。")])]),t._v(" "),_("tr",[_("td",[t._v("Mongo.isCausalConsistency()")]),t._v(" "),_("td",[t._v("指示是否在连接 object 上启用了因果一致性。")])]),t._v(" "),_("tr",[_("td",[t._v("Mongo.setCausalConsistency()")]),t._v(" "),_("td",[t._v("启用或禁用连接 object 上的因果一致性。")])]),t._v(" "),_("tr",[_("td",[t._v("Mongo.setReadPref()")]),t._v(" "),_("td",[t._v("为 MongoDB 连接设置阅读偏好。")])]),t._v(" "),_("tr",[_("td",[t._v("Mongo.setSlaveOk()")]),t._v(" "),_("td",[t._v("允许当前连接上的操作从次要成员读取。")])]),t._v(" "),_("tr",[_("td",[t._v("Mongo.startSession()")]),t._v(" "),_("td",[t._v("在连接 object 上启动 session。")])]),t._v(" "),_("tr",[_("td",[t._v("session")]),t._v(" "),_("td",[t._v("session object。")])]),t._v(" "),_("tr",[_("td",[t._v("SessionOptions")]),t._v(" "),_("td",[t._v("选项 object 为 session。")])])])]),t._v(" "),_("h2",{attrs:{id:"本机"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#本机"}},[t._v("#")]),t._v(" 本机")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("cat()")]),t._v(" "),_("td",[t._v("返回指定文件的内容。")])]),t._v(" "),_("tr",[_("td",[t._v("cd()")]),t._v(" "),_("td",[t._v("将当前工作目录更改为指定的路径。")])]),t._v(" "),_("tr",[_("td",[t._v("copyDbpath()")]),t._v(" "),_("td",[t._v("复制本地DBPATH。供内部使用。")])]),t._v(" "),_("tr",[_("td",[t._v("fuzzFile()")]),t._v(" "),_("td",[t._v("供内部使用以支持测试。")])]),t._v(" "),_("tr",[_("td",[t._v("getHostName()")]),t._v(" "),_("td",[t._v("返回系统的主机名运行mongo shell。")])]),t._v(" "),_("tr",[_("td",[t._v("getMemInfo()")]),t._v(" "),_("td",[t._v("返回报告 shell 使用的 memory 数量的文档。")])]),t._v(" "),_("tr",[_("td",[t._v("hostname()")]),t._v(" "),_("td",[t._v("返回系统的主机名运行 shell。")])]),t._v(" "),_("tr",[_("td",[t._v("listFiles()")]),t._v(" "),_("td",[t._v("返回给出目录中每个 object 的 name 和大小的文档的 array。")])]),t._v(" "),_("tr",[_("td",[t._v("load()")]),t._v(" "),_("td",[t._v("在 shell 中加载并运行 JavaScript 文件。")])]),t._v(" "),_("tr",[_("td",[t._v("ls()")]),t._v(" "),_("td",[t._v("返回当前目录中 files 的列表。")])]),t._v(" "),_("tr",[_("td",[t._v("md5sumFile()")]),t._v(" "),_("td",[t._v("指定文件的MD5哈希值。")])]),t._v(" "),_("tr",[_("td",[t._v("mkdir()")]),t._v(" "),_("td",[t._v("在指定的路径创建目录。")])]),t._v(" "),_("tr",[_("td",[t._v("pwd()")]),t._v(" "),_("td",[t._v("返回当前目录。")])]),t._v(" "),_("tr",[_("td",[t._v("quit()")]),t._v(" "),_("td",[t._v("退出当前的 shell session。")])]),t._v(" "),_("tr",[_("td",[t._v("removeFile()")]),t._v(" "),_("td",[t._v("从本地文件系统中删除指定的文件。")])]),t._v(" "),_("tr",[_("td",[t._v("resetDbpath()")]),t._v(" "),_("td",[t._v("删除本地DBPATH。供内部使用。")])]),t._v(" "),_("tr",[_("td",[t._v("sleep()")]),t._v(" "),_("td",[t._v("在给定的 time 期间暂停mongo shell。")])]),t._v(" "),_("tr",[_("td",[t._v("setVerboseShell()")]),t._v(" "),_("td",[t._v("配置mongo shell 以报告操作时间。")])]),t._v(" "),_("tr",[_("td",[t._v("version()")]),t._v(" "),_("td",[t._v("返回mongo shell 实例的当前 version。")])]),t._v(" "),_("tr",[_("td",[t._v("_isWindows()")]),t._v(" "),_("td",[t._v("如果 shell 在 Windows 系统上运行，则返回"),_("code",[t._v("true")]),t._v("; "),_("code",[t._v("false")]),t._v("如果是 Unix 或 Linux 系统。")])]),t._v(" "),_("tr",[_("td",[t._v("_rand()")]),t._v(" "),_("td",[t._v("返回"),_("code",[t._v("0")]),t._v("和"),_("code",[t._v("1")]),t._v("之间的随机数。")])]),t._v(" "),_("tr",[_("td",[t._v("_srand()")]),t._v(" "),_("td",[t._v("供内部使用。")])])])]),t._v(" "),_("h2",{attrs:{id:"客户端字段级加密"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#客户端字段级加密"}},[t._v("#")]),t._v(" 客户端字段级加密")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("getKeyVault()")]),t._v(" "),_("td",[t._v("返回当前MongoDB连接的密钥保险库对象。")])]),t._v(" "),_("tr",[_("td",[t._v("KeyVault.createKey()")]),t._v(" "),_("td",[t._v("创建用于客户端字段级加密的数据加密密钥。")])]),t._v(" "),_("tr",[_("td",[t._v("KeyVault.deleteKey()")]),t._v(" "),_("td",[t._v("从密钥库中删除指定的数据加密密钥。")])]),t._v(" "),_("tr",[_("td",[t._v("KeyVault.getKey()")]),t._v(" "),_("td",[t._v("从密钥库中检索指定的数据加密密钥。")])]),t._v(" "),_("tr",[_("td",[t._v("KeyVault.getKeys()")]),t._v(" "),_("td",[t._v("检索密钥库中的所有密钥。")])]),t._v(" "),_("tr",[_("td",[t._v("KeyVault.addKeyAlternateName()")]),t._v(" "),_("td",[t._v("将密钥替代名称与指定的数据加密密钥相关联。")])]),t._v(" "),_("tr",[_("td",[t._v("KeyVault.removeKeyAlternateName()")]),t._v(" "),_("td",[t._v("从指定的数据加密密钥中删除密钥替代名称。")])]),t._v(" "),_("tr",[_("td",[t._v("KeyVault.getKeyByAltName()")]),t._v(" "),_("td",[t._v("检索具有指定键替代名称的键。")])]),t._v(" "),_("tr",[_("td",[t._v("getClientEncryption()")]),t._v(" "),_("td",[t._v("返回用于支持字段的显式加密/解密的客户端加密对象。")])]),t._v(" "),_("tr",[_("td",[t._v("ClientEncryption.encrypt()")]),t._v(" "),_("td",[t._v("使用指定的数据加密密钥和加密算法对字段进行加密。")])]),t._v(" "),_("tr",[_("td",[t._v("ClientEncryption.decrypt()")]),t._v(" "),_("td",[t._v("使用关联的数据加密密钥和加密算法解密字段。")])])])])])}),[],!1,null,null,null);v.default=e.exports}}]);