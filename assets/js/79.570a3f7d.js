(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{432:function(t,v,_){"use strict";_.r(v);var d=_(42),r=Object(d.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"聚合管道阶段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#聚合管道阶段"}},[t._v("#")]),t._v(" 聚合管道阶段")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("运算符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("$addFields")]),t._v(" "),_("td",[t._v("向文档添加新字段。输出包含输入文档和新添加字段中所有现有字段的文档。")])]),t._v(" "),_("tr",[_("td",[t._v("$bucket")]),t._v(" "),_("td",[t._v("根据指定的表达式和存储段边界将传入文档分类为称为存储段的组。")])]),t._v(" "),_("tr",[_("td",[t._v("$bucketAuto")]),t._v(" "),_("td",[t._v("根据指定的表达式将传入的文档分类为特定数量的组(称为存储桶)。自动确定存储桶边界，以尝试将文档均匀地分配到指定数量的存储区中。")])]),t._v(" "),_("tr",[_("td",[t._v("$collStats")]),t._v(" "),_("td",[t._v("返回有关集合或视图的统计信息。")])]),t._v(" "),_("tr",[_("td",[t._v("$count")]),t._v(" "),_("td",[t._v("返回聚合管道此阶段的文档数量计数。")])]),t._v(" "),_("tr",[_("td",[t._v("$currentOp")]),t._v(" "),_("td",[t._v("返回有关 MongoDB 部署的活动 and/or 休眠操作的信息。要运行，请使用db.aggregate()方法。")])]),t._v(" "),_("tr",[_("td",[t._v("$facet")]),t._v(" "),_("td",[t._v("在同一组输入文档的单个阶段内处理多个聚合管道。允许创建能够在单个阶段中跨多个维度或方面表征数据的 多面聚合。")])]),t._v(" "),_("tr",[_("td",[t._v("$geoNear")]),t._v(" "),_("td",[t._v("基于与地理空间点的接近度返回有序的文档流。将$match，$sort和$limit的功能合并到地理空间数据中。输出文档包括附加距离字段，并且可以包括位置标识符字段。")])]),t._v(" "),_("tr",[_("td",[t._v("$graphLookup")]),t._v(" "),_("td",[t._v("对集合执行递归搜索。对于每个输出文档，添加一个新的 array 字段，该字段包含该文档的递归搜索的遍历结果。")])]),t._v(" "),_("tr",[_("td",[t._v("$group")]),t._v(" "),_("td",[t._v("按指定的标识符表达式对文档进行分组，并将累加器表达式(如果指定)应用于每个 group。消耗所有输入文档，并为每个不同的 group 输出一个文档。输出文档仅包含标识符字段，如果指定，则包含累积字段。")])]),t._v(" "),_("tr",[_("td",[t._v("$indexStats")]),t._v(" "),_("td",[t._v("返回有关集合的每个索引的使用的统计信息。")])]),t._v(" "),_("tr",[_("td",[t._v("$limit")]),t._v(" "),_("td",[t._v("将未修改的前 n 个文档传递给管道，其中 n 是指定的限制。对于每个输入文档，输出一个文档(对于前 n 个文档)或零文档(在前 n 个文档之后)。")])]),t._v(" "),_("tr",[_("td",[t._v("$listLocalSessions")]),t._v(" "),_("td",[t._v("列出最近在当前连接的mongos或mongod实例上使用的所有 active 会话。这些会话可能尚未传播到system.sessions集合。")])]),t._v(" "),_("tr",[_("td",[t._v("$listSessions")]),t._v(" "),_("td",[t._v("列出所有活动时间已足够长以传播到system.sessions集合的会话。")])]),t._v(" "),_("tr",[_("td",[t._v("$lookup")]),t._v(" "),_("td",[t._v("对同一数据库中的另一个集合执行左外连接，以从“已连接”集合中过滤文档以进行处理。")])]),t._v(" "),_("tr",[_("td",[t._v("$match")]),t._v(" "),_("td",[t._v("过滤文档流以仅允许匹配的文档未经修改地传递到下一个管道阶段。 $match使用标准的 MongoDB 查询。对于每个输入文档，输出一个文档(匹配)或零文档(不匹配)。")])]),t._v(" "),_("tr",[_("td",[t._v("$merge")]),t._v(" "),_("td",[t._v("将聚合管道的结果文档写入集合。该阶段可以将结果合并（插入新文档，合并文档，替换文档，保留现有文档，使操作失败，使用自定义更新管道处理文档）将结果合并到输出集合中。要使用该$merge阶段，它必须是管道中的最后一个阶段。 4.2版中的新功能。")])]),t._v(" "),_("tr",[_("td",[t._v("$out")]),t._v(" "),_("td",[t._v("将聚合管道的结果文档写入集合。要使用$out阶段，它必须是管道中的最后一个阶段。")])]),t._v(" "),_("tr",[_("td",[t._v("$planCacheStats")]),t._v(" "),_("td",[t._v("返回集合的计划缓存信息。")])]),t._v(" "),_("tr",[_("td",[t._v("$project")]),t._v(" "),_("td",[t._v("重新整形流中的每个文档，例如添加新字段或删除现有字段。对于每个输入文档，输出一个文档。")])]),t._v(" "),_("tr",[_("td",[t._v("$redact")]),t._v(" "),_("td",[t._v("通过基于文档本身中存储的信息限制每个文档的内容来重塑流中的每个文档。包含$project和$match的功能。可用于实现字段级编辑。对于每个输入文档，输出一个或零个文档。")])]),t._v(" "),_("tr",[_("td",[t._v("$replaceRoot")]),t._v(" "),_("td",[t._v("用指定的嵌入文档替换文档。该操作将替换输入文档中的所有现有字段，包括_id字段。指定嵌入在输入文档中的文档，以将嵌入的文档提升到顶部级别。")])]),t._v(" "),_("tr",[_("td",[t._v("$replaceWith")]),t._v(" "),_("td",[t._v("用指定的嵌入文档替换文档。该操作将替换输入文档中的所有现有字段，包括_id字段。指定嵌入在输入文档中的文档，以将嵌入的文档提升到顶部级别。 别名$replaceRoot。")])]),t._v(" "),_("tr",[_("td",[t._v("$sample")]),t._v(" "),_("td",[t._v("从输入中随机选择指定数量的文档。")])]),t._v(" "),_("tr",[_("td",[t._v("$set")]),t._v(" "),_("td",[t._v("将新字段添加到文档。输出包含输入文档中所有现有字段和新添加的字段的文档。 别名$addFields。")])]),t._v(" "),_("tr",[_("td",[t._v("$skip")]),t._v(" "),_("td",[t._v("跳过前 n 个文档，其中 n 是指定的跳过编号，并将未修改的其余文档传递给管道。对于每个输入文档，输出零文档(对于前 n 个文档)或一个文档(如果在前 n 个文档之后)。")])]),t._v(" "),_("tr",[_("td",[t._v("$sort")]),t._v(" "),_("td",[t._v("按指定的排序 key 重新排序文档流。只有顺序改变;文件保持不变。对于每个输入文档，输出一个文档。")])]),t._v(" "),_("tr",[_("td",[t._v("$sortByCount")]),t._v(" "),_("td",[t._v("根据指定表达式的值对传入文档进行分组，然后计算每个不同组中的文档数。")])]),t._v(" "),_("tr",[_("td",[t._v("$unwind")]),t._v(" "),_("td",[t._v("从输入文档解构 array 字段以输出每个元素的文档。每个输出文档都使用元素 value 替换 array。对于每个输入文档，输出 n 个文档，其中 n 是 array 元素的数量，对于空 array 可以为零。")])])])])])}),[],!1,null,null,null);v.default=r.exports}}]);