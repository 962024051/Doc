(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{549:function(t,a,e){"use strict";e.r(a);var r=e(42),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"实例方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[t._v("#")]),t._v(" 实例方法")]),t._v(" "),e("h2",{attrs:{id:"历史记录操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#历史记录操作"}},[t._v("#")]),t._v(" 历史记录操作")]),t._v(" "),e("h3",{attrs:{id:"go"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#go"}},[t._v("#")]),t._v(" go")]),t._v(" "),e("p",[t._v("允许你在历史中前进或后退。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("go(delta: number): void\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("delta")]),t._v(" "),e("td",[e("code",[t._v("number")])]),t._v(" "),e("td",[t._v("相对于当前页面，你要移动到的历史位置")])])])]),t._v(" "),e("h3",{attrs:{id:"back"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#back"}},[t._v("#")]),t._v(" back")]),t._v(" "),e("p",[t._v("如果可能的话，通过调用 "),e("code",[t._v("history.back()")]),t._v(" 回溯历史。相当于 "),e("code",[t._v("router.go(-1)")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("back(): void\n")])])]),e("h3",{attrs:{id:"forward"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#forward"}},[t._v("#")]),t._v(" forward")]),t._v(" "),e("p",[t._v("如果可能的话，通过调用 "),e("code",[t._v("history.forward()")]),t._v(" 在历史中前进。相当于 "),e("code",[t._v("router.go(1)")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("forward(): void\n")])])]),e("h2",{attrs:{id:"路由记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路由记录"}},[t._v("#")]),t._v(" 路由记录")]),t._v(" "),e("h3",{attrs:{id:"addroute"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#addroute"}},[t._v("#")]),t._v(" addRoute")]),t._v(" "),e("p",[t._v("添加一条新的路由记录作为现有路由的子路由。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("addRoute(parentName: string | symbol, route: RouteRecordRaw): () => void\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("parentName")]),t._v(" "),e("td",[t._v("string| symbol")]),t._v(" "),e("td",[t._v("父路由记录，route 应该被添加到的位置")])]),t._v(" "),e("tr",[e("td",[t._v("route")]),t._v(" "),e("td",[t._v("RouteRecordRaw")]),t._v(" "),e("td",[t._v("要添加的路由记录")])])])]),t._v(" "),e("h3",{attrs:{id:"addroute-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#addroute-2"}},[t._v("#")]),t._v(" addRoute")]),t._v(" "),e("p",[t._v("添加一条新的路由记录到路由")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("addRoute(route: RouteRecordRaw): () => void\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("route")]),t._v(" "),e("td",[t._v("RouteRecordRaw")]),t._v(" "),e("td",[t._v("要添加的路由记录")])])])]),t._v(" "),e("h3",{attrs:{id:"getroutes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getroutes"}},[t._v("#")]),t._v(" getRoutes")]),t._v(" "),e("p",[t._v("获取所有 路由记录的完整列表。")]),t._v(" "),e("p",[e("strong",[t._v("函数签名：")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("getRoutes(): RouteRecord[]\n")])])]),e("h3",{attrs:{id:"hasroute"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hasroute"}},[t._v("#")]),t._v(" hasRoute")]),t._v(" "),e("p",[t._v("确认是否存在指定名称的路由。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("hasRoute(name: string | symbol): boolean\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("name")]),t._v(" "),e("td",[e("code",[t._v("string | symbol")])]),t._v(" "),e("td",[t._v("要确认的路由名称")])])])]),t._v(" "),e("h3",{attrs:{id:"removeroute"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#removeroute"}},[t._v("#")]),t._v(" removeRoute")]),t._v(" "),e("p",[t._v("通过名称删除现有路由。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("removeRoute(name: string | symbol): void\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("name")]),t._v(" "),e("td",[e("code",[t._v("string | symbol")])]),t._v(" "),e("td",[t._v("要删除的路由名称")])])])]),t._v(" "),e("h2",{attrs:{id:"路由location对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路由location对象"}},[t._v("#")]),t._v(" 路由Location对象")]),t._v(" "),e("h3",{attrs:{id:"push"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#push"}},[t._v("#")]),t._v(" push")]),t._v(" "),e("p",[t._v("通过在历史堆栈中推送一个 entry，以编程方式导航到一个新的 URL。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("push(to: RouteLocationRaw): Promise<NavigationFailure | void | undefined>\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("to")]),t._v(" "),e("td",[t._v("RouteLocationRaw")]),t._v(" "),e("td",[t._v("要导航到的路由地址")])])])]),t._v(" "),e("h3",{attrs:{id:"replace"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#replace"}},[t._v("#")]),t._v(" replace")]),t._v(" "),e("p",[t._v("通过替换历史堆栈中的当前 entry，以编程方式导航到一个新的 URL。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("replace(to: RouteLocationRaw): Promise<NavigationFailure | void | undefined>\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("to")]),t._v(" "),e("td",[t._v("RouteLocationRaw")]),t._v(" "),e("td",[t._v("要导航到的路由地址")])])])]),t._v(" "),e("h3",{attrs:{id:"resolve"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#resolve"}},[t._v("#")]),t._v(" resolve")]),t._v(" "),e("p",[t._v("返回路由地址的标准化版本。还包括一个包含任何现有 base 的 href 属性。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("resolve(to: RouteLocationRaw): RouteLocation & {\n  href: string\n}\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("to")]),t._v(" "),e("td",[t._v("RouteLocationRaw")]),t._v(" "),e("td",[t._v("要解析的原始路由地址")])])])]),t._v(" "),e("h2",{attrs:{id:"导航守卫"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导航守卫"}},[t._v("#")]),t._v(" 导航守卫")]),t._v(" "),e("h3",{attrs:{id:"aftereach"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aftereach"}},[t._v("#")]),t._v(" afterEach")]),t._v(" "),e("p",[t._v("添加一个导航钩子，在每次导航后执行。返回一个删除注册钩子的函数。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("afterEach(guard: NavigationHookAfter): () => void\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("guard")]),t._v(" "),e("td",[t._v("NavigationHookAfter")]),t._v(" "),e("td",[t._v("要添加的导航钩子")])])])]),t._v(" "),e("h3",{attrs:{id:"beforeeach"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforeeach"}},[t._v("#")]),t._v(" beforeEach")]),t._v(" "),e("p",[t._v("添加一个导航守卫，在任何导航前执行。返回一个删除已注册守卫的函数。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("beforeEach(guard: NavigationGuard): () => void\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("guard")]),t._v(" "),e("td",[t._v("NavigationGuard")]),t._v(" "),e("td",[t._v("要添加的导航守卫")])])])]),t._v(" "),e("h3",{attrs:{id:"beforeresolve"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beforeresolve"}},[t._v("#")]),t._v(" beforeResolve")]),t._v(" "),e("p",[t._v("添加一个导航守卫，在导航即将解析之前执行。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("beforeResolve(guard: NavigationGuard): () => void\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("guard")]),t._v(" "),e("td",[t._v("NavigationGuard")]),t._v(" "),e("td",[t._v("要添加的导航守卫")])])])]),t._v(" "),e("h3",{attrs:{id:"isready"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isready"}},[t._v("#")]),t._v(" isReady")]),t._v(" "),e("p",[t._v("当路由器完成初始化导航时，返回一个 Promise，这意味着它已经解析了所有与初始路由相关的异步输入钩子和异步组件。如果初始导航已经发生了，那么 promise 就会立即解析。这在服务器端渲染中很有用，可以确保服务器和客户端的输出一致。需要注意的是，在服务器端，你需要手动推送初始位置，而在客户端，路由器会自动从 URL 中获取初始位置。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("isReady(): Promise<void>\n")])])]),e("h3",{attrs:{id:"onerror"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onerror"}},[t._v("#")]),t._v(" onError")]),t._v(" "),e("p",[t._v("添加一个错误处理程序，在导航期间每次发生未捕获的错误时都会调用该处理程序。这包括同步和异步抛出的错误、在任何导航守卫中返回或传递给 "),e("code",[t._v("next")]),t._v(" 的错误，以及在试图解析渲染路由所需的异步组件时发生的错误。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("onError(handler: (error: any) => any): () => void\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("handler")]),t._v(" "),e("td",[e("code",[t._v("(error: any) => any")])]),t._v(" "),e("td",[t._v("要注册的错误处理器")])])])])])}),[],!1,null,null,null);a.default=v.exports}}]);