(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{467:function(t,e,a){"use strict";a.r(e);var s=a(42),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"dataview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dataview"}},[t._v("#")]),t._v(" DataView")]),t._v(" "),a("p",[t._v("可以从 二进制ArrayBuffer 对象中读写多种数值类型的底层接口")]),t._v(" "),a("h2",{attrs:{id:"构造器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造器"}},[t._v("#")]),t._v(" 构造器")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("new DataView(buffer [, byteOffset [, byteLength]])\n")])])]),a("h2",{attrs:{id:"实例属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例属性"}},[t._v("#")]),t._v(" 实例属性")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("buffer")]),t._v(" "),a("td",[t._v("构造时被 DataView 引用的 ArrayBuffer")])]),t._v(" "),a("tr",[a("td",[t._v("byteLength")]),t._v(" "),a("td",[t._v("ArrayBuffer 开始的字节长度")])]),t._v(" "),a("tr",[a("td",[t._v("byteOffset")]),t._v(" "),a("td",[t._v("ArrayBuffer 开始的字节偏移量")])])])]),t._v(" "),a("h2",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("h3",{attrs:{id:"读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读"}},[t._v("#")]),t._v(" 读")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("dataview.getInt8(byteOffset)\ndataview.getUint8(byteOffset)\ndataview.getInt16(byteOffset [, littleEndian])\ndataview.getUint16(byteOffset [, littleEndian])\ndataview.getInt32(byteOffset [, littleEndian])\ndataview.getUint32(byteOffset [, littleEndian])\ndataview.getFloat32(byteOffset [, littleEndian])\ndataview.getFloat64(byteOffset [, littleEndian])\n")])])]),a("h3",{attrs:{id:"写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写"}},[t._v("#")]),t._v(" 写")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("dataview.setInt8(byteOffset, value)\ndataview.setUint8(byteOffset, value)\ndataview.setInt16(byteOffset, value [, littleEndian])\ndataview.setUint16(byteOffset, value [, littleEndian])\ndataview.setInt32(byteOffset, value [, littleEndian])\ndataview.setUint32(byteOffset, value [, littleEndian])\ndataview.setFloat32(byteOffset, value [, littleEndian])\ndataview.setFloat64(byteOffset, value [, littleEndian])\n")])])]),a("p",[t._v("byteOffset")]),t._v(" "),a("p",[t._v("​\t偏移量，从头开始计算，单位为字节")]),t._v(" "),a("p",[t._v("littleEndian")]),t._v(" "),a("ol",[a("li",[t._v("可选 表示该 16 位整数是否以 little- or big-endian 格式存储的；")]),t._v(" "),a("li",[t._v("如果传入的值为 true，就表示使用 little-endian（低字节序），")]),t._v(" "),a("li",[t._v("如果传入的值为 false 或者 undefined，则会使用 big-endian（高字节序） 方式读值")])]),t._v(" "),a("p",[t._v("value")]),t._v(" "),a("p",[t._v("​\t设置的数值")])])}),[],!1,null,null,null);e.default=n.exports}}]);